ingress:
  domain: "www.evaluatemessage.dev"
  staticIpName: "istio-ingress-ip"
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "5"
    
gateway:
  name: "istio-ingressgateway"
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "1"
  service:
    type: ClusterIP
    annotations: 
      "cloud.google.com/neg": '{"ingress": true}'
      "cloud.google.com/backend-config": '{"default": "istio-backend-config"}'
istiod:
  meshConfig:
    defaultConfig:
      tracing:
        zipkin:
          address: metric-jaeger-collector.istio-system.svc.cluster.local:9411
    extensionProviders:
    - name: "oauth2-proxy"
      envoyExtAuthzHttp:
        service: "metric-oauth2-proxy.istio-system.svc.cluster.local"
        port: "80" # The default port used by oauth2-proxy.
        includeHeadersInCheck: # headers sent to the oauth2-proxy in the check request.
            - "cookie"
            - "x-forwarded-access-token"
            - "x-forwarded-user"
            - "x-forwarded-email"
            - "authorization"
            - "x-forwarded-proto"
            - "proxy-authorization"
            - "user-agent"
            - "x-forwarded-host"
            - "from"
            - "x-forwarded-for"
            - "accept"
        headersToUpstreamOnAllow: ["authorization", "path", "x-auth-request-user", "x-auth-request-email", "x-auth-request-access-token", "x-auth-request-user-groups"] # headers sent to backend application when request is allowed.
        headersToDownstreamOnDeny: ["content-type", "set-cookie"] # headers sent back to the client when request is denied.